name: CI for Node.js Docker Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:latest
        options: --privileged

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the Docker image from Dockerfile
      - name: Build Docker image
        run: docker build -t banking-api .

      # Step 5: Run the Docker container with dynamic port mapping
      - name: Run Docker container with dynamic port
        run: docker run -d -p 0:3000 --name banking-api-container banking-api

      # Step 6: Get the dynamically allocated port and export it to an environment variable
      - name: Get Docker dynamic port
        run: |
          # Extract the dynamic port mapped to the container's port 3000
          DYNAMIC_PORT=$(docker inspect --format='{{(index (index .NetworkSettings.Ports "3000/tcp") 0).HostPort}}' banking-api-container)
          echo "DYNAMIC_PORT=$DYNAMIC_PORT" >> $GITHUB_ENV  # Save dynamic port to environment

      # Step 7: Wait for the API to be ready using the dynamic port
      - name: Wait for API to be ready
        run: |
          echo "Waiting for the API to be available on port $DYNAMIC_PORT"
          timeout 30 bash -c 'until curl -s http://localhost:$DYNAMIC_PORT/health; do sleep 2; done'

      # Step 8: Run Jest tests using Supertest, passing the dynamic port to the test environment
      - name: Run tests
        env:
          API_URL: "http://localhost:${{ env.DYNAMIC_PORT }}"  # Use dynamic port from environment
        run: npm test

      # Step 9: Install Postman CLI
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      # Step 10: Login to Postman CLI
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      # Step 11: Run Postman collection tests
      - name: Run Postman API tests
        run: |
          postman collection run "8213448-3cd5f902-bb56-4eff-b4d0-156428f07ad0" \
          -e "8213448-e32bcf1a-c929-4a7a-b881-312cc5e643df" --env-var "port=${{env.DYNAMIC_PORT}}"


      # Step 9: Clean up the Docker container
      - name: Cleanup Docker container
        run: docker stop banking-api-container && docker rm banking-api-container
